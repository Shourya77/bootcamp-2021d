{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Shourya/Bootcamp/bootcamp-2021d/src/components/notificationTwitt.tsx\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Surface, Text, Avatar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport color from 'color';\nexport var NotificationTwitt = function NotificationTwitt(props) {\n  var theme = useTheme();\n  var contentColor = color(theme.colors.text).alpha(0.8).rgb().string();\n  return React.createElement(Surface, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.leftColumn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"star-four-points\",\n    size: 30,\n    color: \"#8d38e8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.rightColumn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.topRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, props.people.map(function (_ref) {\n    var name = _ref.name,\n        image = _ref.image;\n    return React.createElement(Avatar.Image, {\n      style: {\n        marginRight: 10\n      },\n      key: name,\n      source: {\n        uri: image\n      },\n      size: 40,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, props.people.map(function (_ref2) {\n    var name = _ref2.name;\n    return name;\n  }).join(' and '), \" likes\", ' ', props.name, \" tweet.\"), React.createElement(Text, {\n    style: {\n      color: contentColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, props.recipe)));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingTop: 15,\n    paddingRight: 15,\n    paddingBottom: 15\n  },\n  leftColumn: {\n    width: 100,\n    marginRight: 10,\n    alignItems: 'flex-end'\n  },\n  rightColumn: {\n    flex: 1\n  },\n  topRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/Shourya/Bootcamp/bootcamp-2021d/src/components/notificationTwitt.tsx"],"names":["React","Surface","Text","Avatar","useTheme","MaterialCommunityIcons","color","NotificationTwitt","props","theme","contentColor","colors","text","alpha","rgb","string","styles","container","leftColumn","rightColumn","topRow","people","map","name","image","marginRight","uri","marginBottom","join","recipe","StyleSheet","create","flexDirection","paddingTop","paddingRight","paddingBottom","width","alignItems","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text, Avatar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport color from 'color';\n\ntype Props = {\n  id: number;\n  name: string;\n  content: string;\n  people: Array<{\n    name: string;\n    image: string;\n  }>;\n};\n\nexport const NotificationTwitt = (props: Props) => {\n  const theme = useTheme();\n\n  const contentColor = color(theme.colors.text)\n    .alpha(0.8)\n    .rgb()\n    .string();\n\n  return (\n    <Surface style={styles.container}>\n      <View style={styles.leftColumn}>\n        <MaterialCommunityIcons\n          name=\"star-four-points\"\n          size={30}\n          color=\"#8d38e8\"\n        />\n      </View>\n      <View style={styles.rightColumn}>\n        <View style={styles.topRow}>\n          {props.people.map(({ name, image }) => (\n            <Avatar.Image\n              style={{ marginRight: 10 }}\n              key={name}\n              source={{ uri: image }}\n              size={40}\n            />\n          ))}\n        </View>\n        <Text style={{ marginBottom: 10 }}>\n          {props.people.map(({ name }) => name).join(' and ')} likes{' '}\n          {props.name} tweet.\n        </Text>\n        <Text style={{ color: contentColor }}>{props.recipe}</Text>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingTop: 15,\n    paddingRight: 15,\n    paddingBottom: 15,\n  },\n  leftColumn: {\n    width: 100,\n    marginRight: 10,\n    alignItems: 'flex-end',\n  },\n  rightColumn: {\n    flex: 1,\n  },\n  topRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}