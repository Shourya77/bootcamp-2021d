{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Shourya/Bootcamp/bootcamp-2021d/src/main.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Provider as PaperProvider, DefaultTheme } from 'react-native-paper';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { Updates } from 'expo';\nimport { useColorScheme } from 'react-native-appearance';\nimport { RootNavigator } from \"./rootNavigator\";\nimport { PreferencesContext } from \"./context/preferencesContext\";\nexport var Main = function Main() {\n  var colorScheme = useColorScheme();\n\n  var _React$useState = React.useState(colorScheme === 'dark' ? 'dark' : 'light'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      theme = _React$useState2[0],\n      setTheme = _React$useState2[1];\n\n  var _React$useState3 = React.useState(I18nManager.isRTL),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      rtl = _React$useState4[0];\n\n  function toggleTheme() {\n    setTheme(function (theme) {\n      return theme === 'light' ? 'dark' : 'light';\n    });\n  }\n\n  var toggleRTL = React.useCallback(function () {\n    I18nManager.forceRTL(!rtl);\n    Updates.reloadFromCache();\n  }, [rtl]);\n  var preferences = React.useMemo(function () {\n    return {\n      toggleTheme: toggleTheme,\n      toggleRTL: toggleRTL,\n      theme: theme,\n      rtl: rtl ? 'right' : 'left'\n    };\n  }, [rtl, theme, toggleRTL]);\n  return React.createElement(PreferencesContext.Provider, {\n    value: preferences,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    theme: theme === 'light' ? _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n      colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n        primary: '#1ba1f2'\n      })\n    }) : {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(RootNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/Shourya/Bootcamp/bootcamp-2021d/src/main.tsx"],"names":["React","Provider","PaperProvider","DefaultTheme","Updates","useColorScheme","RootNavigator","PreferencesContext","Main","colorScheme","useState","theme","setTheme","I18nManager","isRTL","rtl","toggleTheme","toggleRTL","useCallback","forceRTL","reloadFromCache","preferences","useMemo","colors","primary"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QAAQ,IAAIC,aADd,EAEEC,YAFF,QAIO,oBAJP;;AAMA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,SAASC,aAAT;AACA,SAASC,kBAAT;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB,MAAMC,WAAW,GAAGJ,cAAc,EAAlC;;AADwB,wBAEEL,KAAK,CAACU,QAAN,CACxBD,WAAW,KAAK,MAAhB,GAAyB,MAAzB,GAAkC,OADV,CAFF;AAAA;AAAA,MAEjBE,KAFiB;AAAA,MAEVC,QAFU;;AAAA,yBAKVZ,KAAK,CAACU,QAAN,CAAwBG,WAAW,CAACC,KAApC,CALU;AAAA;AAAA,MAKjBC,GALiB;;AAOxB,WAASC,WAAT,GAAuB;AACrBJ,IAAAA,QAAQ,CAAC,UAAAD,KAAK;AAAA,aAAKA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAAlC;AAAA,KAAN,CAAR;AACD;;AAED,MAAMM,SAAS,GAAGjB,KAAK,CAACkB,WAAN,CAAkB,YAAM;AACxCL,IAAAA,WAAW,CAACM,QAAZ,CAAqB,CAACJ,GAAtB;AACAX,IAAAA,OAAO,CAACgB,eAAR;AACD,GAHiB,EAGf,CAACL,GAAD,CAHe,CAAlB;AAKA,MAAMM,WAAW,GAAGrB,KAAK,CAACsB,OAAN,CAClB;AAAA,WAAO;AACLN,MAAAA,WAAW,EAAXA,WADK;AAELC,MAAAA,SAAS,EAATA,SAFK;AAGLN,MAAAA,KAAK,EAALA,KAHK;AAILI,MAAAA,GAAG,EAAGA,GAAG,GAAG,OAAH,GAAa;AAJjB,KAAP;AAAA,GADkB,EAOlB,CAACA,GAAD,EAAMJ,KAAN,EAAaM,SAAb,CAPkB,CAApB;AAUA,SACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEI,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,KAAK,EACHV,KAAK,KAAK,OAAV,mCAESR,YAFT;AAGMoB,MAAAA,MAAM,kCAAOpB,YAAY,CAACoB,MAApB;AAA4BC,QAAAA,OAAO,EAAE;AAArC;AAHZ,SAKI,EAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF;AAmBD,CA7CM","sourcesContent":["import React from 'react';\nimport {\n  Provider as PaperProvider,\n  DefaultTheme,\n  DarkTheme,\n} from 'react-native-paper';\nimport { I18nManager } from 'react-native';\nimport { Updates } from 'expo';\nimport { useColorScheme } from 'react-native-appearance';\n\nimport { RootNavigator } from './rootNavigator';\nimport { PreferencesContext } from './context/preferencesContext';\n\nexport const Main = () => {\n  const colorScheme = useColorScheme();\n  const [theme, setTheme] = React.useState<'light' | 'dark'>(\n    colorScheme === 'dark' ? 'dark' : 'light'\n  );\n  const [rtl] = React.useState<boolean>(I18nManager.isRTL);\n\n  function toggleTheme() {\n    setTheme(theme => (theme === 'light' ? 'dark' : 'light'));\n  }\n\n  const toggleRTL = React.useCallback(() => {\n    I18nManager.forceRTL(!rtl);\n    Updates.reloadFromCache();\n  }, [rtl]);\n\n  const preferences = React.useMemo(\n    () => ({\n      toggleTheme,\n      toggleRTL,\n      theme,\n      rtl: (rtl ? 'right' : 'left') as 'right' | 'left',\n    }),\n    [rtl, theme, toggleRTL]\n  );\n\n  return (\n    <PreferencesContext.Provider value={preferences}>\n      <PaperProvider\n        theme={\n          theme === 'light'\n            ? {\n                ...DefaultTheme,\n                colors: { ...DefaultTheme.colors, primary: '#1ba1f2' },\n              }\n            : {\n              //   ...DarkTheme,\n              //   colors: { ...DarkTheme.colors, primary: '#1ba1f2' },\n              }\n        }\n      >\n        <RootNavigator />\n      </PaperProvider>\n    </PreferencesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}