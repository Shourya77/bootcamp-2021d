{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Shourya/Bootcamp/bootcamp-2021d/src/bottomTabs.tsx\";\n\nimport React from 'react';\nimport color from 'color';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { useTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useIsFocused, getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport overlay from \"./overlay\";\nimport { Feed } from \"./feed\";\nimport { Notifications } from \"./notifications\";\nvar Tab = createMaterialBottomTabNavigator();\nexport var BottomTabs = function BottomTabs(props) {\n  var _getFocusedRouteNameF;\n\n  var routeName = (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(props.route)) != null ? _getFocusedRouteNameF : 'Feed';\n  var theme = useTheme();\n  var safeArea = useSafeAreaInsets();\n  var isFocused = useIsFocused();\n  var icon = 'feather';\n\n  switch (routeName) {\n    case 'Messages':\n      icon = 'email-plus-outline';\n      break;\n\n    default:\n      icon = 'feather';\n      break;\n  }\n\n  var tabBarColor = theme.dark ? overlay(6, theme.colors.surface) : theme.colors.surface;\n  return React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Feed\",\n    backBehavior: \"initialRoute\",\n    shifting: true,\n    activeColor: theme.colors.primary,\n    inactiveColor: color(theme.colors.text).alpha(0.6).rgb().string(),\n    sceneAnimationEnabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Top Trends\",\n    component: Feed,\n    options: {\n      tabBarIcon: 'home-account',\n      tabBarColor: tabBarColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Friends\",\n    component: Notifications,\n    options: {\n      tabBarIcon: 'user-friends',\n      tabBarColor: tabBarColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/Shourya/Bootcamp/bootcamp-2021d/src/bottomTabs.tsx"],"names":["React","color","createMaterialBottomTabNavigator","useTheme","useSafeAreaInsets","useIsFocused","getFocusedRouteNameFromRoute","overlay","Feed","Notifications","Tab","BottomTabs","props","routeName","route","theme","safeArea","isFocused","icon","tabBarColor","dark","colors","surface","primary","text","alpha","rgb","string","tabBarIcon"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gCAAT,QAAiD,wCAAjD;AACA,SAASC,QAAT,QAAsC,oBAAtC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,YAAT,EAAkCC,4BAAlC,QAAsE,0BAAtE;AAEA,OAAOC,OAAP;AACA,SAASC,IAAT;AAEA,SAASC,aAAT;AAGA,IAAMC,GAAG,GAAGR,gCAAgC,EAA5C;AAMA,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAkB;AAAA;;AAC1C,MAAMC,SAAS,4BAAGP,4BAA4B,CAACM,KAAK,CAACE,KAAP,CAA/B,oCAAgD,MAA/D;AAEA,MAAMC,KAAK,GAAGZ,QAAQ,EAAtB;AACA,MAAMa,QAAQ,GAAGZ,iBAAiB,EAAlC;AACA,MAAMa,SAAS,GAAGZ,YAAY,EAA9B;AAEA,MAAIa,IAAI,GAAG,SAAX;;AAEA,UAAQL,SAAR;AACE,SAAK,UAAL;AACEK,MAAAA,IAAI,GAAG,oBAAP;AACA;;AACF;AACEA,MAAAA,IAAI,GAAG,SAAP;AACA;AANJ;;AASA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,IAAN,GACfb,OAAO,CAAC,CAAD,EAAIQ,KAAK,CAACM,MAAN,CAAaC,OAAjB,CADQ,GAEhBP,KAAK,CAACM,MAAN,CAAaC,OAFjB;AAIA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,gBAAgB,EAAC,MADnB;AAEE,IAAA,YAAY,EAAC,cAFf;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,WAAW,EAAEP,KAAK,CAACM,MAAN,CAAaE,OAJ5B;AAKE,IAAA,aAAa,EAAEtB,KAAK,CAACc,KAAK,CAACM,MAAN,CAAaG,IAAd,CAAL,CACZC,KADY,CACN,GADM,EAEZC,GAFY,GAGZC,MAHY,EALjB;AASE,IAAA,qBAAqB,EAAE,KATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,GAAD,CAAK,MAAL;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEnB,IAFb;AAGE,IAAA,OAAO,EAAE;AACPoB,MAAAA,UAAU,EAAE,cADL;AAEPT,MAAAA,WAAW,EAAXA;AAFO,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAmBE,oBAAC,GAAD,CAAK,MAAL;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEV,aAFb;AAGE,IAAA,OAAO,EAAE;AACPmB,MAAAA,UAAU,EAAE,cADL;AAEPT,MAAAA,WAAW,EAAXA;AAFO,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,CADF;AAgCD,CAtDM","sourcesContent":["import React from 'react';\nimport color from 'color';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { useTheme, Portal, FAB } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useIsFocused, RouteProp, getFocusedRouteNameFromRoute } from '@react-navigation/native';\n\nimport overlay from './overlay';\nimport { Feed } from './feed';\nimport { Message } from './message';\nimport { Notifications } from './notifications';\nimport { StackNavigatorParamlist } from './types';\n\nconst Tab = createMaterialBottomTabNavigator();\n\ntype Props = {\n  route: RouteProp<StackNavigatorParamlist, 'FeedList'>;\n};\n\nexport const BottomTabs = (props: Props) => {\n  const routeName = getFocusedRouteNameFromRoute(props.route) ?? 'Feed';\n\n  const theme = useTheme();\n  const safeArea = useSafeAreaInsets();\n  const isFocused = useIsFocused();\n\n  let icon = 'feather';\n\n  switch (routeName) {\n    case 'Messages':\n      icon = 'email-plus-outline';\n      break;\n    default:\n      icon = 'feather';\n      break;\n  }\n\n  const tabBarColor = theme.dark\n    ? (overlay(6, theme.colors.surface) as string)\n    : theme.colors.surface;\n\n  return (\n    <React.Fragment>\n      <Tab.Navigator\n        initialRouteName=\"Feed\"\n        backBehavior=\"initialRoute\"\n        shifting={true}\n        activeColor={theme.colors.primary}\n        inactiveColor={color(theme.colors.text)\n          .alpha(0.6)\n          .rgb()\n          .string()}\n        sceneAnimationEnabled={false}\n      >\n        <Tab.Screen\n          name=\"Top Trends\"\n          component={Feed}\n          options={{\n            tabBarIcon: 'home-account',\n            tabBarColor,\n          }}\n        />\n        <Tab.Screen\n          name=\"Friends\"\n          component={Notifications}\n          options={{\n            tabBarIcon: 'user-friends',\n            tabBarColor,\n          }}\n        />\n      </Tab.Navigator>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}